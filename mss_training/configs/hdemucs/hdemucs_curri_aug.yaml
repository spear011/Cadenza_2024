audio:
  chunk_size: 485100 # samplerate * segment
  min_mean_abs: 0.001
  hop_length: 1024

valid:
  dataset_type: 4
  batch_size: 1
  audio:
    chunk_size: 441000
    min_mean_abs: 0.001
    hop_length: 1024
  training:
    instruments: ['drums', 'bass', 'other', 'vocals']
    target_instrument: null
    batch_size: 1
    augmentation: False
    augmentation_type: Null
    use_mp3_compress: False
    augmentation_mix: False
    augmentation_loudness: False
    num_steps: 967
    use_amp: False

dataset:
  train_easy: configs/dataset_config/aug_easy.yaml
  train_all: configs/dataset_config/aug_all.yaml
  valid_easy: configs/dataset_config/valid_easy.yaml
  valid_all: configs/dataset_config/valid_all.yaml

training:
  batch_size: 4
  gradient_accumulation_steps: 2
  grad_clip: 0
  segment: 11
  shift: 1
  samplerate: 44100
  channels: 2
  normalize: True
  instruments: ['drums', 'bass', 'other', 'vocals']
  source_weights: [1., 1. , 1., 1.]
  target_instrument: null
  augmentation: True # enable augmentations by audiomentations and pedalboard
  augmentation_type: Null
  use_mp3_compress: false # Deprecated
  augmentation_mix: True # Mix several stems of the same type with some probability
  augmentation_loudness: True # randomly change loudness of each stem
  augmentation_loudness_type: 2 # Type 1 or 2
  augmentation_loudness_min: 0.5
  augmentation_loudness_max: 1.5
  num_epochs: 200
  num_steps: 200
  optimizer: adamw
  lr: 0.00009
  patience: 2
  reduce_factor: 0.95
  q: 0.95
  coarse_loss_clip: true
  momentum: 0.9
  ema_momentum: 0.999
  other_fix: false # it's needed for checking on multisong dataset if other is actually instrumental
  use_amp: true # enable or disable usage of mixed precision (float16) - usually it must be true

inference:
  num_overlap: 2

model: hdemucs

hdemucs:  # see demucs/hdemucs.py for a detailed description
  # Channels
  channels: 48
  channels_time:
  growth: 2
  # STFT
  nfft: 4096
  wiener_iters: 0
  end_iters: 0
  wiener_residual: false
  cac: true
  # Main structure
  depth: 6
  rewrite: true
  hybrid: true
  hybrid_old: false
  # Frequency Branch
  multi_freqs: []
  multi_freqs_depth: 3
  freq_emb: 0.2
  emb_scale: 10
  emb_smooth: true
  # Convolutions
  kernel_size: 8
  stride: 4
  time_stride: 2
  context: 1
  context_enc: 0
  # normalization
  norm_starts: 4
  norm_groups: 4
  # DConv residual branch
  dconv_mode: 1
  dconv_depth: 2
  dconv_comp: 4
  dconv_attn: 4
  dconv_lstm: 4
  dconv_init: 1e-3
  # Weight init
  rescale: 0.1

svd:  # see svd.py for documentation
  penalty: 0
  min_size: 0.1
  dim: 1
  niters: 2
  powm: false
  proba: 1
  conv_only: false
  convtr: false
  bs: 1

quant:  # quantization hyper params
  diffq:    # diffq penalty, typically 1e-4 or 3e-4
  qat:      # use QAT with a fixed number of bits (not as good as diffq)
  min_size: 0.2
  group_size: 8

optim:
  lr: 3e-4
  momentum: 0.9
  beta2: 0.999
  loss: l1    # l1 or mse
  optim: adam
  weight_decay: 0
  clip_grad: 0